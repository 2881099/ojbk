<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Domain</name>
    </assembly>
    <members>
        <member name="T:ojbk.Entities.AdmConfig">
            <summary>
            配置项
            </summary>
        </member>
        <member name="P:ojbk.Entities.AdmConfig.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:ojbk.Entities.AdmConfig.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:ojbk.Entities.AdmConfig.Exists(System.String)">
            <summary>
            验证键值是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ojbk.Entities.AdmConfig.Exists(ojbk.Entities.AdmConfig)">
            <summary>
            数据项是否存在
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:ojbk.Entities.AdmConfig.QueryByPrefix(System.String)">
            <summary>
            根据前缀查询配置项列表
            </summary>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:ojbk.Entities.AdmConfig.GetByKey(System.String)">
            <summary>
            根据Key获取对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:ojbk.Entities.AdmRoute">
            <summary>
            后台路由，一级=菜单
            </summary>
        </member>
        <member name="P:ojbk.Entities.AdmRoute.ParentId">
            <summary>
            父节点
            </summary>
        </member>
        <member name="P:ojbk.Entities.AdmRoute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ojbk.Entities.AdmRoute.Extdata">
            <summary>
            前端数据
            </summary>
        </member>
        <member name="P:ojbk.Entities.AdmRoute.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:ojbk.Entities.AuthRole">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthRole.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthRole.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:ojbk.Entities.AuthUser">
            <summary>
            登陆账户
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.SelectAdmRoute">
            <summary>
            登陆用户，查询后台路由表
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.SelectOrgPost">
            <summary>
            登陆用户，查询岗位表
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.SelectOrgPerson">
            <summary>
            登陆用户，查询员工表
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.PersonId">
            <summary>
            员工id
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.Person">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.LoginTime">
            <summary>
            最后登录时间
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.LoginIp">
            <summary>
            最后登录IP
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:ojbk.Entities.AuthUser.IsAdmin">
            <summary>
            是否为系统管理员
            </summary>
        </member>
        <member name="T:ojbk.Entities.OrgPost">
            <summary>
            岗位
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.DepartmentId">
            <summary>
            部门id
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.Department">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.Title">
            <summary>
            岗位称呼
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.DutyContent">
            <summary>
            职责内容
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.JobContent">
            <summary>
            工作内容
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.OrgPostPerson.PostId">
            <summary>
            岗位id
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPost.OrgPostPerson.PersonId">
            <summary>
            员工id
            </summary>
        </member>
        <member name="T:ojbk.Entities.AuthUserStatus">
            <summary>
            账户状态
            </summary>
        </member>
        <member name="T:ojbk.Entities.OrgDepartment">
            <summary>
            部门
            <para></para>
            部门 -> 岗位 -> 员工
            </summary>
        </member>
        <member name="T:ojbk.Entities.OrgPerson">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPerson.FullName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPerson.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPerson.IdCard">
            <summary>
            身份证
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPerson.IdCardAddress">
            <summary>
            身份证地址
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPerson.IsLeave">
            <summary>
            是否离职
            </summary>
        </member>
        <member name="P:ojbk.Entities.OrgPerson.LeaveTime">
            <summary>
            离职时间
            </summary>
        </member>
        <member name="T:FreeSql.BaseEntity`2">
            <summary>
            Entity base class, including CreateTime/UpdateTime/IsDeleted, the CRUD methods, and ID primary key definition.
            <para></para>
            包括 CreateTime/UpdateTime/IsDeleted、CRUD 方法、以及 ID 主键定义 的实体基类
            <para></para>
            When TKey is int/long, the Id is set to be an auto-incremented primary key
            <para></para>
            当 TKey 为 int/long 时，Id 主键被设为自增值主键
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:FreeSql.BaseEntity`2.Id">
            <summary>
            Primary key <br />
            主键
            </summary>
        </member>
        <member name="M:FreeSql.BaseEntity`2.FindAsync(`1)">
            <summary>
            Get data based on the value of the primary key <br />
            根据主键值获取数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntity`2.Find(`1)">
            <summary>
            Get data based on the value of the primary key <br />
            根据主键值获取数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:FreeSql.BaseEntity`1">
            <summary>
            Entity base class, including CreateTime/UpdateTime/IsDeleted, and sync/async CRUD methods.
            <para></para>
            包括 CreateTime/UpdateTime/IsDeleted、以及 CRUD 异步和同步方法的实体基类
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:FreeSql.BaseEntity`1.Delete(System.Boolean)">
            <summary>
            To delete data <br />
            删除数据
            </summary>
            <param name="physicalDelete">To flag whether to delete the physical level of the data</param>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntity`1.Restore">
            <summary>
            To recover deleted data <br />
            恢复删除的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntity`1.Update">
            <summary>
            To update data <br />
            更新数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntity`1.Insert">
            <summary>
            To insert data <br />
            插入数据
            </summary>
        </member>
        <member name="M:FreeSql.BaseEntity`1.Save">
            <summary>
            To insert or update data <br />
            更新或插入
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntity`1.SaveMany(System.String)">
            <summary>
            To completely save the navigation properties of the entity in the form of sub-tables. <br />
            【完整】保存导航属性，子表
            </summary>
            <param name="navigatePropertyName">Navigation property name</param>
        </member>
        <member name="T:FreeSql.BaseEntityAsync`2">
            <summary>
            Entity base class, including CreateTime/UpdateTime/IsDeleted, the async CRUD methods, and ID primary key definition.
            <para></para>
            包括 CreateTime/UpdateTime/IsDeleted、CRUD 异步方法、以及 ID 主键定义 的实体基类
            <para></para>
            When TKey is int/long, the Id is set to be an auto-incremented primary key
            <para></para>
            当 TKey 为 int/long 时，Id 主键被设为自增值主键
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:FreeSql.BaseEntityAsync`2.Id">
            <summary>
            Primary key <br />
            主键
            </summary>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`2.FindAsync(`1)">
            <summary>
            Get data based on the value of the primary key <br />
            根据主键值获取数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:FreeSql.BaseEntityAsync`1">
            <summary>
            Entity base class, including CreateTime/UpdateTime/IsDeleted, and async CRUD methods.
            <para></para>
            包括 CreateTime/UpdateTime/IsDeleted、以及 CRUD 异步方法的实体基类
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`1.DeleteAsync(System.Boolean)">
            <summary>
            To delete data <br />
            删除数据
            </summary>
            <param name="physicalDelete">To flag whether to delete the physical level of the data</param>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`1.RestoreAsync">
            <summary>
            To recover deleted data <br />
            恢复删除的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`1.UpdateAsync">
            <summary>
            To update data <br />
            更新数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`1.InsertAsync">
            <summary>
            To insert data <br />
            插入数据
            </summary>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`1.SaveAsync">
            <summary>
            To insert or update data <br />
            更新或插入
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntityAsync`1.SaveManyAsync(System.String)">
            <summary>
            To completely save the navigation properties of the entity in the form of sub-tables. <br />
            【完整】保存导航属性，子表
            </summary>
            <param name="navigatePropertyName">Navigation property name</param>
        </member>
        <member name="T:FreeSql.BaseEntity">
            <summary>
            Entity base class, including CreateTime/UpdateTime/IsDeleted.
            <para></para>
            包括 CreateTime/UpdateTime/IsDeleted 的实体基类
            </summary>
        </member>
        <member name="P:FreeSql.BaseEntity.CreateTime">
            <summary>
            Created time <br />
            创建时间
            </summary>
        </member>
        <member name="P:FreeSql.BaseEntity.UpdateTime">
            <summary>
            Updated time <br />
            更新时间
            </summary>
        </member>
        <member name="P:FreeSql.BaseEntity.IsDeleted">
            <summary>
            Logical Delete <br />
            逻辑删除
            </summary>
        </member>
        <member name="P:FreeSql.BaseEntity.Sort">
            <summary>
            Sort <br />
            排序
            </summary>
        </member>
        <member name="T:FreeSql.BaseEntityReadOnly`1">
            <summary>
            A readonly entity base class, including CreateTime/UpdateTime/IsDeleted.
            <para></para>
            包括 CreateTime/UpdateTime/IsDeleted 的只读实体基类
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:FreeSql.BaseEntityReadOnly`1.Select">
            <summary>
            To query data <br />
            查询数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntityReadOnly`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Query conditions <br />
            查询条件，Where(a => a.Id> 10)
            <para></para>
            Support navigation object query <br />
            支持导航对象查询，Where(a => a.Author.Email == "2881099@qq.com")
            </summary>
            <param name="exp">lambda表达式</param>
            <returns></returns>
        </member>
        <member name="M:FreeSql.BaseEntityReadOnly`1.WhereIf(System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Query conditions <br />
            查询条件，Where(true, a => a.Id > 10)
            <para></para>
            Support navigation object query <br />
            支导航对象查询，Where(true, a => a.Author.Email == "2881099@qq.com")
            </summary>
            <param name="condition">true 时生效</param>
            <param name="exp">lambda表达式</param>
            <returns></returns>
        </member>
        <member name="P:FreeSql.BaseEntityReadOnly`1.Repository">
            <summary>
            Repository object. <br />
            仓储对象
            </summary>
        </member>
        <member name="M:FreeSql.BaseEntityReadOnly`1.Attach">
            <summary>
            To Attach entities. When updating data, only the changed part is updated. <br />
            附加实体。在更新数据时，只更新变化的部分
            </summary>
        </member>
        <member name="T:FreeSql.BaseEntityTree`2">
            <summary>
            简单的十级树状结构基类
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:FreeSql.BaseEntityTree`2.ParentId">
            <summary>
            父级id
            </summary>
        </member>
        <member name="P:FreeSql.BaseEntityTree`2.Childs">
            <summary>
            下级列表
            </summary>
        </member>
        <member name="P:FreeSql.BaseEntityTree`2.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Util.GenerratorCode(System.Int32)">
            <summary>
             生成短信验证码
            </summary>
            <param name="len">验证码长度为4</param>
            <returns></returns>
        </member>
    </members>
</doc>
